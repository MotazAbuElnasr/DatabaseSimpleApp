package database;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import oracle.jrockit.jfr.JFR;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * 
 * @author Motaz
 */
public class User_interface extends javax.swing.JFrame {
    
    /**
     * Creates new form User_interface
     */
    DataBase dataBaseManager;
    Person currentPerson;
    public User_interface() {
        initComponents();
        try {
            dataBaseManager = new DataBase();
        } catch (SQLException ex) {
            System.out.println("Failed to load Database");
        }
        if(!dataBaseManager.stArrayList.isEmpty()){
            showData(dataBaseManager.stArrayList.get(0));
            currentPerson = dataBaseManager.stArrayList.get(0);
        }
        else{
            idTF.setText("Database is empty");
            fNameTF.setText("Database is empty");
            lNameTF.setText("Database is empty");
            mNameTF.setText("Database is empty");
            phoneTF.setText("Database is empty");
            emailTF.setText("Database is empty"); 
            updateBtn.setEnabled(false);
            deleteBtn.setEnabled(false);
            nextBtn.setEnabled(false);
            previousBtn.setEnabled(false);
            firstBtn.setEnabled(false);
            lastBtn.setEnabled(false);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        firstBtn = new javax.swing.JButton();
        previousBtn = new javax.swing.JButton();
        nextBtn = new javax.swing.JButton();
        lastBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        idTF = new javax.swing.JTextField();
        fNameTF = new javax.swing.JTextField();
        mNameTF = new javax.swing.JTextField();
        lNameTF = new javax.swing.JTextField();
        emailTF = new javax.swing.JTextField();
        phoneTF = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        newBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        firstBtn.setText("First");
        firstBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstBtnActionPerformed(evt);
            }
        });

        previousBtn.setText("Previous");
        previousBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousBtnActionPerformed(evt);
            }
        });

        nextBtn.setText("Next");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        lastBtn.setText("last");
        lastBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("ID");

        jLabel2.setText("Fname");

        jLabel3.setText("Mname");

        jLabel4.setText("Lastname");

        jLabel5.setText("mail");

        jLabel6.setText("phone");

        idTF.setEditable(false);
        idTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTFActionPerformed(evt);
            }
        });

        mNameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mNameTFActionPerformed(evt);
            }
        });

        addBtn.setText("Add");
        addBtn.setEnabled(false);
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        newBtn.setText("New");
        newBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(newBtn)
                .addGap(18, 18, 18)
                .addComponent(addBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(updateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(31, 31, 31)
                .addComponent(firstBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(previousBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(nextBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(lastBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(82, 82, 82))
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idTF)
                    .addComponent(fNameTF)
                    .addComponent(mNameTF)
                    .addComponent(lNameTF)
                    .addComponent(emailTF)
                    .addComponent(phoneTF, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(mNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(phoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateBtn)
                    .addComponent(deleteBtn)
                    .addComponent(firstBtn)
                    .addComponent(previousBtn)
                    .addComponent(nextBtn)
                    .addComponent(lastBtn)
                    .addComponent(addBtn)
                    .addComponent(newBtn))
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        currentPerson = getData();
        try {
            dataBaseManager.update(currentPerson.id, currentPerson.fName, currentPerson.mName, currentPerson.lName, currentPerson.email, currentPerson.phone);
        
        } catch (SQLException ex) {
            System.out.println("database connection lost");
        }
        
    }//GEN-LAST:event_updateBtnActionPerformed

    private void mNameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mNameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mNameTFActionPerformed

    private void idTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTFActionPerformed

    private void newBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBtnActionPerformed
        // TODO add your handling code here:
            if(dataBaseManager.stArrayList.isEmpty()){
             idTF.setText("1");
            }
            else{
                try {
                    idTF.setText(String.valueOf(dataBaseManager.getLast().id+1));
                } catch (SQLException ex) {
                    System.out.println("connection Lost");
                }
            }
            fNameTF.setText("");
            lNameTF.setText("");
            mNameTF.setText("");
            phoneTF.setText("");
            emailTF.setText("");
            newBtn.setEnabled(false);
            addBtn.setEnabled(true);
            updateBtn.setEnabled(false);
            deleteBtn.setEnabled(false);
    }//GEN-LAST:event_newBtnActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        try {
            currentPerson = dataBaseManager.getNext(Integer.parseInt(idTF.getText()));
            if (currentPerson==null){
                showData(dataBaseManager.stArrayList.get(0));
                currentPerson = dataBaseManager.stArrayList.get(0);
            }
            else{
            showData(currentPerson);
            }
            setEnablebtns();
            addBtn.setEnabled(false);

        } catch (SQLException ex) {
            System.out.println("Database Connection lost");
        }
    }//GEN-LAST:event_nextBtnActionPerformed

    private void previousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousBtnActionPerformed
            try {
            currentPerson = dataBaseManager.getPrev(Integer.parseInt(idTF.getText()));
            if (currentPerson==null){
                showData(dataBaseManager.stArrayList.get(dataBaseManager.stArrayList.size()-1));
                currentPerson = dataBaseManager.stArrayList.get(dataBaseManager.stArrayList.size()-1);
            }
            else{
            showData(currentPerson);
            }
            setEnablebtns();
            addBtn.setEnabled(false);

        } catch (SQLException ex) {
            System.out.println("Database Connection lost");
        }
    }//GEN-LAST:event_previousBtnActionPerformed

    private void firstBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstBtnActionPerformed
        // TODO add your handling code here:
        if(!dataBaseManager.stArrayList.isEmpty()){
            showData(dataBaseManager.stArrayList.get(0));
            currentPerson = dataBaseManager.stArrayList.get(0);
        }
        else{
            idTF.setText("Database is empty");
            fNameTF.setText("Database is empty");
            lNameTF.setText("Database is empty");
            mNameTF.setText("Database is empty");
            phoneTF.setText("Database is empty");
            emailTF.setText("Database is empty");            
        }
            setEnablebtns();
            addBtn.setEnabled(false);

    }//GEN-LAST:event_firstBtnActionPerformed

    private void lastBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastBtnActionPerformed
        // TODO add your handling code here:
        if(!dataBaseManager.stArrayList.isEmpty()){
            showData(dataBaseManager.stArrayList.get(dataBaseManager.stArrayList.size()-1));
            currentPerson = dataBaseManager.stArrayList.get(dataBaseManager.stArrayList.size()-1);
        }
        else{
            idTF.setText("Database is empty");
            fNameTF.setText("Database is empty");
            lNameTF.setText("Database is empty");
            mNameTF.setText("Database is empty");
            phoneTF.setText("Database is empty");
            emailTF.setText("Database is empty");            
        }
        setEnablebtns();
            addBtn.setEnabled(false);
    }//GEN-LAST:event_lastBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        currentPerson = getData();
        try {
            dataBaseManager.insert(currentPerson.fName, currentPerson.mName, currentPerson.lName, currentPerson.email, currentPerson.phone);
            currentPerson=dataBaseManager.stArrayList.get(dataBaseManager.stArrayList.size()-1);
            showData(currentPerson);
            firstBtn.setEnabled(true);
            updateBtn.setEnabled(true);
            deleteBtn.setEnabled(true);
            nextBtn.setEnabled(true);
            previousBtn.setEnabled(true);
            lastBtn.setEnabled(true);
            addBtn.setEnabled(false);
            newBtn.setEnabled(true);

        } catch (SQLException ex) {
            System.out.println("Data base connection lost");
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        currentPerson = getData();
        try {
            int currentId ;
            currentId = dataBaseManager.Delete(currentPerson.id);
            if(!dataBaseManager.stArrayList.isEmpty()){
                try{
                currentPerson = dataBaseManager.stArrayList.get(currentId);
                }
                catch (Exception e){
                currentPerson = dataBaseManager.stArrayList.get(currentId-1);

                }
                showData(currentPerson);    
            }
            else{
            idTF.setText("Database is empty");
            fNameTF.setText("Database is empty");
            lNameTF.setText("Database is empty");
            mNameTF.setText("Database is empty");
            phoneTF.setText("Database is empty");
            emailTF.setText("Database is empty");
            updateBtn.setEnabled(false);
            deleteBtn.setEnabled(false);
            nextBtn.setEnabled(false);
            previousBtn.setEnabled(false);
            lastBtn.setEnabled(false);
            firstBtn.setEnabled(false);
            }
            
        } catch (SQLException ex) {
            System.out.println("database connection lost");
        }
        
    }//GEN-LAST:event_deleteBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new User_interface().setVisible(true);
            }
        });
    }
    
    private Person getData(){
        if (dataBaseManager.stArrayList.isEmpty()) {
           currentPerson = new Person(Integer.parseInt(idTF.getText()), fNameTF.getText(), lNameTF.getText(), mNameTF.getText(), phoneTF.getText(),  emailTF.getText());
        }
        else{
         currentPerson.id = Integer.parseInt(idTF.getText());
        currentPerson.fName = fNameTF.getText();
        currentPerson.lName = lNameTF.getText();
        currentPerson.mName = mNameTF.getText();
        currentPerson.phone = phoneTF.getText();
        currentPerson.email = emailTF.getText();           
        }

        return currentPerson;
    }
    
    private void showData(Person currentPerson){
         idTF.setText(String.valueOf(currentPerson.id));
         fNameTF.setText( currentPerson.fName);
         lNameTF.setText( currentPerson.lName);
         mNameTF.setText( currentPerson.mName);
         phoneTF.setText( currentPerson.phone);
         emailTF.setText( currentPerson.email);
    }
    
    private void setEnablebtns (){
            newBtn.setEnabled(true);
            addBtn.setEnabled(true);
            updateBtn.setEnabled(true);
            deleteBtn.setEnabled(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField emailTF;
    private javax.swing.JTextField fNameTF;
    private javax.swing.JButton firstBtn;
    private javax.swing.JTextField idTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField lNameTF;
    private javax.swing.JButton lastBtn;
    private javax.swing.JTextField mNameTF;
    private javax.swing.JButton newBtn;
    private javax.swing.JButton nextBtn;
    private javax.swing.JTextField phoneTF;
    private javax.swing.JButton previousBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
